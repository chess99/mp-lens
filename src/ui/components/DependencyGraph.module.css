/* DependencyGraph.module.css */

.graphContainer {
  width: 100%;
  height: 100%;
  background-color: #fafafa;
  z-index: 1;
  position: relative;
}

/* Allow node labels to wrap (G6 renders text in <text> but we can enable breaks via CSS for HTML tooltips if any) */
.graphContainer :global(g.node text) {
  white-space: normal;
}

/* Style for interactive graph nodes */
.graphContainer :global(g.node) {
  cursor: pointer; /* Ensure nodes have pointer cursor */
}

/* Ensure labels within nodes also have pointer cursor */
.graphContainer :global(g.node text) {
  cursor: pointer;
}

.graphPlaceholder {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: rgba(250, 250, 250, 0.8);
  z-index: 2;
  color: #999;
  font-style: italic;
  text-align: center;
}

.graphPlaceholderText {
  padding: 20px;
}

.graphControls {
  position: absolute;
  top: 10px;
  right: 10px;
  z-index: 10;
  display: flex;
  flex-direction: column;
  gap: 5px;
}

.graphControls button {
  background-color: #fff;
  border: 1px solid #ddd;
  border-radius: 4px;
  padding: 5px 10px;
  cursor: pointer;
  display: flex;
  align-items: center;
  gap: 5px;
  font-size: 12px;
  color: #555;
  transition: all 0.2s ease;
}

.graphControls button:hover {
  background-color: #f5f5f5;
  border-color: #ccc;
}

.graphLoading {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100%;
  min-height: 200px;
  color: #666;
  font-style: italic;
}
